name: Python CI and Publishing

on:
  push:
    branches: [ "master", "main", "feature/*", "fix/*", "refactor/*" ]
  pull_request:
    branches: [ "master", "main", "feature/*", "fix/*" ]
  release:
    types: [created]

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install Python and uv
        uses: astral-sh/setup-uv@4db96194c378173c656ce18a155ffc14a9fc4355 # v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: lint
        run: uv run task lint
      - name: Test with python ${{ matrix.python-version }}
        run: uv run --frozen task test

#  publish:
#    runs-on: ubuntu-latest
#    if: github.event_name == 'release' && github.event.action == 'created'
#    steps:
#      - uses: actions/checkout@v4
#      - name: Install Python and uv
#        uses: astral-sh/setup-uv@v5
#        with:
#          python-version: "3.12"
#      - name: Install build tools
#        run: uv pip install build twine
#      - name: Build package
#        run: python -m build
#      - name: Publish to PyPI
#        run: twine upload dist/*
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}